{
  "specification": [
    {
      "title": "Referrer Policy is not explicitly defined",
      "description": "Check that referrer URL follows no-referrer-when-downgrade policy when no explicit Referrer Policy is set.",
      "specification_url": "https://w3c.github.io/webappsec-referrer-policy/#referrer-policies",
      "test_expansion": [
        {
          "name": "insecure-protocol",
          "expansion": "default",
          "source_protocol": "http",
          "source_context": "*",
          "redirection": "*",
          "origin": ["same-http", "cross-http"],
          "subresource": "*",
          "delivery_type": "*",
          "delivery_value": null,
          "expected": "stripped-referrer"
        },
        {
          "name": "upgrade-protocol",
          "expansion": "default",
          "source_protocol": "http",
          "source_context": "*",
          "redirection": "*",
          "origin": ["same-https", "cross-https"],
          "subresource": "*",
          "delivery_type": "*",
          "delivery_value": null,
          "expected": "stripped-referrer"
        },
        {
          "name": "downgrade-protocol",
          "expansion": "default",
          "source_protocol": "https",
          "source_context": "*",
          "redirection": "*",
          "origin": ["same-http", "cross-http"],
          "subresource": "*",
          "delivery_type": "*",
          "delivery_value": null,
          "expected": "omitted"
        },
        {
          "name": "secure-protocol",
          "expansion": "default",
          "source_protocol": "https",
          "source_context": "*",
          "redirection": "*",
          "origin": ["same-https", "cross-https"],
          "subresource": "*",
          "delivery_type": "*",
          "delivery_value": null,
          "expected": "stripped-referrer"
        }
      ]
    },
    {
      "title": "Referrer Policy is set to 'no-referrer'",
      "description": "Check that sub-resource never gets the referrer URL.",
      "specification_url": "https://w3c.github.io/webappsec-referrer-policy/#referrer-policy-no-referrer",
      "test_expansion": [
        {
          "name": "generic",
          "expansion": "default",
          "source_protocol": "*",
          "source_context": "*",
          "redirection": "*",
          "origin": "*",
          "subresource": "*",
          "delivery_type": "*",
          "delivery_value": "no-referrer",
          "expected": "omitted"
        }
      ]
    },
    {
      "title": "Referrer Policy is set to 'no-referrer-when-downgrade'",
      "description": "Check that non a priori insecure subresource gets the full Referrer URL. A priori insecure subresource gets no referrer information.",
      "specification_url": "https://w3c.github.io/webappsec-referrer-policy/#referrer-policy-no-referrer-when-downgrade",
      "test_expansion": [
        {
          "name": "insecure-protocol",
          "expansion": "default",
          "source_protocol": "http",
          "source_context": "*",
          "redirection": "*",
          "origin": ["same-http", "cross-http"],
          "subresource": "*",
          "delivery_type": "*",
          "delivery_value": "no-referrer-when-downgrade",
          "expected": "stripped-referrer"
        },
        {
          "name": "upgrade-protocol",
          "expansion": "default",
          "source_protocol": "http",
          "source_context": "*",
          "redirection": "*",
          "origin": ["same-https", "cross-https"],
          "subresource": "*",
          "delivery_type": "*",
          "delivery_value": "no-referrer-when-downgrade",
          "expected": "stripped-referrer"
        },
        {
          "name": "downgrade-protocol",
          "expansion": "default",
          "source_protocol": "https",
          "source_context": "*",
          "redirection": "*",
          "origin": ["same-http", "cross-http"],
          "subresource": "*",
          "delivery_type": "*",
          "delivery_value": "no-referrer-when-downgrade",
          "expected": "omitted"
        },
        {
          "name": "secure-protocol",
          "expansion": "default",
          "source_protocol": "https",
          "source_context": "*",
          "redirection": "*",
          "origin": ["same-https", "cross-https"],
          "subresource": "*",
          "delivery_type": "*",
          "delivery_value": "no-referrer-when-downgrade",
          "expected": "stripped-referrer"
        }
      ]
    },
    {
      "title": "Referrer Policy is set to 'origin'",
      "description": "Check that all subresources in all casses get only the origin portion of the referrer URL.",
      "specification_url": "https://w3c.github.io/webappsec-referrer-policy/#referrer-policy-origin",
      "test_expansion": [
        {
          "name": "generic",
          "expansion": "default",
          "source_protocol": "*",
          "source_context": "*",
          "redirection": "*",
          "origin": "*",
          "subresource": "*",
          "delivery_type": "*",
          "delivery_value": "origin",
          "expected": "origin"
        }
      ]
    },
    {
      "title": "Referrer Policy is set to 'same-origin'",
      "description": "Check that cross-origin subresources get no referrer information and same-origin get the stripped referrer URL.",
      "specification_url": "https://w3c.github.io/webappsec-referrer-policy/#referrer-policy-same-origin",
      "test_expansion": [
        {
          "name": "same-origin-insecure",
          "expansion": "default",
          "source_protocol": "http",
          "source_context": "*",
          "redirection": "*",
          "origin": "same-http",
          "subresource": "*",
          "delivery_type": "*",
          "delivery_value": "same-origin",
          "expected": "stripped-referrer"
        },
        {
          "name": "same-origin-secure-default",
          "expansion": "default",
          "source_protocol": "https",
          "source_context": "*",
          "redirection": "*",
          "origin": "same-https",
          "subresource": "*",
          "delivery_type": "*",
          "delivery_value": "same-origin",
          "expected": "stripped-referrer"
        },
        {
          "name": "same-origin-insecure",
          "expansion": "override",
          "source_protocol": "*",
          "source_context": "*",
          "redirection": "swap-origin",
          "origin": ["same-http", "same-https"],
          "subresource": "*",
          "delivery_type": "*",
          "delivery_value": "same-origin",
          "expected": "omitted"
        },
        {
          "name": "cross-origin",
          "expansion": "default",
          "source_protocol": "*",
          "source_context": "*",
          "redirection": "*",
          "origin": ["cross-http", "cross-https"],
          "subresource": "*",
          "delivery_type": "*",
          "delivery_value": "same-origin",
          "expected": "omitted"
        }
      ]
    },
    {
      "title": "Referrer Policy is set to 'origin-when-cross-origin'",
      "description": "Check that cross-origin subresources get the origin portion of the referrer URL and same-origin get the stripped referrer URL.",
      "specification_url": "https://w3c.github.io/webappsec-referrer-policy/#referrer-policy-origin-when-cross-origin",
      "test_expansion": [
        {
          "name": "same-origin-insecure",
          "expansion": "default",
          "source_protocol": "http",
          "source_context": "*",
          "redirection": "*",
          "origin": "same-http",
          "subresource": "*",
          "delivery_type": "*",
          "delivery_value": "origin-when-cross-origin",
          "expected": "stripped-referrer"
        },
        {
          "name": "same-origin-secure-default",
          "expansion": "default",
          "source_protocol": "https",
          "source_context": "*",
          "redirection": "*",
          "origin": "same-https",
          "subresource": "*",
          "delivery_type": "*",
          "delivery_value": "origin-when-cross-origin",
          "expected": "stripped-referrer"
        },
        {
          "name": "same-origin-upgrade",
          "expansion": "default",
          "source_protocol": "http",
          "source_context": "*",
          "redirection": "*",
          "origin": "same-https",
          "subresource": "*",
          "delivery_type": "*",
          "delivery_value": "origin-when-cross-origin",
          "expected": "origin"
        },
        {
          "name": "same-origin-downgrade",
          "expansion": "default",
          "source_protocol": "https",
          "source_context": "*",
          "redirection": "*",
          "origin": "same-http",
          "subresource": "*",
          "delivery_type": "*",
          "delivery_value": "origin-when-cross-origin",
          "expected": "origin"
        },
        {
          "name": "same-origin-insecure",
          "expansion": "override",
          "source_protocol": "*",
          "source_context": "*",
          "redirection": "swap-origin",
          "origin": ["same-http", "same-https"],
          "subresource": "*",
          "delivery_type": "*",
          "delivery_value": "origin-when-cross-origin",
          "expected": "origin"
        },
        {
          "name": "cross-origin",
          "expansion": "default",
          "source_protocol": "*",
          "source_context": "*",
          "redirection": "*",
          "origin": ["cross-http", "cross-https"],
          "subresource": "*",
          "delivery_type": "*",
          "delivery_value": "origin-when-cross-origin",
          "expected": "origin"
        }
      ]
    },
    {
      "title": "Referrer Policy is set to 'strict-origin'",
      "description": "Check that non a priori insecure subresource gets only the origin portion of the referrer URL. A priori insecure subresource gets no referrer information.",
      "specification_url": "https://w3c.github.io/webappsec-referrer-policy/#referrer-policy-strict-origin",
      "test_expansion": [
        {
          "name": "insecure-protocol",
          "expansion": "default",
          "source_protocol": "http",
          "source_context": "*",
          "redirection": "*",
          "origin": ["same-http", "cross-http"],
          "subresource": "*",
          "delivery_type": "*",
          "delivery_value": "strict-origin",
          "expected": "origin"
        },
        {
          "name": "upgrade-protocol",
          "expansion": "default",
          "source_protocol": "http",
          "source_context": "*",
          "redirection": "*",
          "origin": ["same-https", "cross-https"],
          "subresource": "*",
          "delivery_type": "*",
          "delivery_value": "strict-origin",
          "expected": "origin"
        },
        {
          "name": "downgrade-protocol",
          "expansion": "default",
          "source_protocol": "https",
          "source_context": "*",
          "redirection": "*",
          "origin": ["same-http", "cross-http"],
          "subresource": "*",
          "delivery_type": "*",
          "delivery_value": "strict-origin",
          "expected": "omitted"
        },
        {
          "name": "secure-protocol",
          "expansion": "default",
          "source_protocol": "https",
          "source_context": "*",
          "redirection": "*",
          "origin": ["same-https", "cross-https"],
          "subresource": "*",
          "delivery_type": "*",
          "delivery_value": "strict-origin",
          "expected": "origin"
        }
      ]
    },
    {
      "title": "Referrer Policy is set to 'strict-origin-when-cross-origin'",
      "description": "Check that a priori insecure subresource gets no referrer information. Otherwise, cross-origin subresources get the origin portion of the referrer URL and same-origin get the stripped referrer URL.",
      "specification_url": "https://w3c.github.io/webappsec-referrer-policy/#referrer-policy-strict-origin-when-cross-origin",
      "test_expansion": [
        {
          "name": "same-insecure",
          "expansion": "default",
          "source_protocol": "http",
          "source_context": "*",
          "redirection": "*",
          "origin": "same-http",
          "subresource": "*",
          "delivery_type": "*",
          "delivery_value": "strict-origin-when-cross-origin",
          "expected": "stripped-referrer"
        },
        {
          "name": "same-insecure",
          "expansion": "override",
          "source_protocol": "http",
          "source_context": "*",
          "redirection": "swap-origin",
          "origin": "same-http",
          "subresource": "*",
          "delivery_type": "*",
          "delivery_value": "strict-origin-when-cross-origin",
          "expected": "origin"
        },
        {
          "name": "cross-insecure",
          "expansion": "default",
          "source_protocol": "http",
          "source_context": "*",
          "redirection": "*",
          "origin": "cross-http",
          "subresource": "*",
          "delivery_type": "*",
          "delivery_value": "strict-origin-when-cross-origin",
          "expected": "origin"
        },
        {
          "name": "upgrade-protocol4",
          "expansion": "default",
          "source_protocol": "http",
          "source_context": "*",
          "redirection": "*",
          "origin": ["same-https", "cross-https"],
          "subresource": "*",
          "delivery_type": "*",
          "delivery_value": "strict-origin-when-cross-origin",
          "expected": "origin"
        },
        {
          "name": "downgrade-protocol",
          "expansion": "default",
          "source_protocol": "https",
          "source_context": "*",
          "redirection": "*",
          "origin": ["same-http", "cross-http"],
          "subresource": "*",
          "delivery_type": "*",
          "delivery_value": "strict-origin-when-cross-origin",
          "expected": "omitted"
        },
        {
          "name": "same-secure",
          "expansion": "default",
          "source_protocol": "https",
          "source_context": "*",
          "redirection": "*",
          "origin": "same-https",
          "subresource": "*",
          "delivery_type": "*",
          "delivery_value": "strict-origin-when-cross-origin",
          "expected": "stripped-referrer"
        },
        {
          "name": "same-secure",
          "expansion": "override",
          "source_protocol": "https",
          "source_context": "*",
          "redirection": "swap-origin",
          "origin": "same-https",
          "subresource": "*",
          "delivery_type": "*",
          "delivery_value": "strict-origin-when-cross-origin",
          "expected": "origin"
        },
        {
          "name": "cross-secure",
          "expansion": "default",
          "source_protocol": "https",
          "source_context": "*",
          "redirection": "*",
          "origin": "cross-https",
          "subresource": "*",
          "delivery_type": "*",
          "delivery_value": "strict-origin-when-cross-origin",
          "expected": "origin"
        }
      ]
    },
    {
      "title": "Referrer Policy is set to 'unsafe-url'",
      "description": "Check that all sub-resources get the stripped referrer URL.",
      "specification_url": "https://w3c.github.io/webappsec-referrer-policy/#referrer-policy-unsafe-url",
      "test_expansion": [
        {
          "name": "generic",
          "expansion": "default",
          "source_protocol": "*",
          "source_context": "*",
          "redirection": "*",
          "origin": "*",
          "subresource": "*",
          "delivery_type": "*",
          "delivery_value": "unsafe-url",
          "expected": "stripped-referrer"
        }
      ]
    }
  ],

  "excluded_tests":[
    {
      "name": "cross-origin-workers",
      "expansion": "*",
      "source_protocol": "*",
      "redirection": "*",
      "source_context": "*",
      "origin": ["cross-http", "cross-https"],
      "subresource": [
        "worker-request",
        "module-worker",
        "shared-worker"
      ],
      "delivery_type": "*",
      "delivery_value": "*",
      "expected": "*"
    },
    {
      "name": "upgraded-protocol-workers",
      "expansion": "*",
      "source_protocol": "http",
      "source_context": "*",
      "redirection": "*",
      "origin": ["same-https", "cross-https"],
      "subresource": [
        "worker-request",
        "module-worker",
        "shared-worker"
      ],
      "delivery_type": "*",
      "delivery_value": "*",
      "expected": "*"
    },
    {
      "name": "mixed-content-insecure-subresources",
      "expansion": "*",
      "source_protocol": "https",
      "source_context": "*",
      "redirection": "*",
      "origin": ["same-http", "cross-http"],
      "subresource": "*",
      "delivery_type": "*",
      "delivery_value": "*",
      "expected": "*"
    },
    {
      "name": "area-tag",
      "expansion": "*",
      "source_protocol": "*",
      "source_context": "*",
      "redirection": "*",
      "origin": "*",
      "subresource": "area-tag",
      "delivery_type": "*",
      "delivery_value": "*",
      "expected": "*"
    },
    {
      "name": "worker-requests-with-swap-origin-redirect",
      "expansion": "*",
      "source_protocol": "*",
      "source_context": "*",
      "redirection": "swap-origin",
      "origin": "*",
      "subresource": [
        "worker-request",
        "module-worker",
        "shared-worker"
      ],
      "delivery_type": "*",
      "delivery_value": "*",
      "expected": "*"
    },
    {
      "name": "overhead-for-redirection",
      "expansion": "*",
      "source_protocol": "*",
      "source_context": "*",
      "redirection": ["keep-origin", "swap-origin"],
      "origin": "*",
      "subresource": ["a-tag", "area-tag"],
      "delivery_type": "*",
      "delivery_value": "*",
      "expected": "*"
    },
    {
      "name": "source-https-unsupported-by-web-platform-tests-runners",
      "expansion": "*",
      "source_protocol": "https",
      "source_context": "*",
      "redirection": "*",
      "origin": "*",
      "subresource": "*",
      "delivery_type": "*",
      "delivery_value": "*",
      "expected": "*"
    },
    {
      "name": "<link rel=noreferrer>'s delivery_value should be no-referrer",
      "expansion": "*",
      "source_protocol": "*",
      "redirection": "*",
      "source_context": "*",
      "origin": "*",
      "subresource": "*",
      "delivery_type": "rel-noref",
      "delivery_value": [
        null,
        "no-referrer-when-downgrade",
        "same-origin",
        "origin",
        "origin-when-cross-origin",
        "strict-origin",
        "strict-origin-when-cross-origin",
        "unsafe-url"
      ],
      "expected": "*"
    },
    {
      "name": "Subresource types not supported in workers",
      "expansion": "*",
      "source_protocol": "*",
      "redirection": "*",
      "source_context": [
        "classic-worker",
        "classic-data-worker",
        "module-worker",
        "module-data-worker"
      ],
      "origin": "*",
      "subresource": [
        "iframe-tag",
        "img-tag",
        "script-tag",
        "a-tag",
        "area-tag"
      ],
      "delivery_type": "*",
      "delivery_value": "*",
      "expected": "*"
    }
  ],

  "delivery_key": "referrerPolicy",

  "delivery_type_schema": {
    "http-rp": {
      "supportedSourceContexts": [
        "top", "iframe", "classic-worker", "module-worker"
      ],
      "supportedSubresources": []
    },
    "meta": {
      "supportedSourceContexts": ["top", "iframe", "srcdoc"],
      "supportedSubresources": []
    },
    "attr": {
      "supportedSourceContexts": [],
      "supportedSubresources": [
        "iframe-tag", "img-tag", "script-tag", "a-tag", "area-tag"
      ]
    },
    "rel-noref": {
      "supportedSourceContexts": [],
      "supportedSubresources": ["a-tag"]
    }
  },

  "source_context_schema": {
    "top": {
      "description": "Policy set by the top-level Document",
      "sourceContextList": [
        {"sourceContextType": "top", "policyDeliveries": ["policy"]},
        {"sourceContextType": "req"}]
    },
    "req": {
      "description": "Policy set by subresource request",
      "sourceContextList": [
        {"sourceContextType": "top"},
        {"sourceContextType": "req", "policyDeliveries": ["policy"]}]
    },
    "srcdoc-inherit": {
      "description": "srcdoc iframe should inherit parent Document's policy",
      "sourceContextList": [
        {"sourceContextType": "top", "policyDeliveries": ["policy"]},
        {"sourceContextType": "srcdoc"},
        {"sourceContextType": "req"}]
    },
    "srcdoc-override": {
      "description":
        "srcdoc iframe's policy should override parent Document's policy",
      "sourceContextList": [
        {"sourceContextType": "top", "policyDeliveries": ["anotherPolicy"]},
        {"sourceContextType": "srcdoc", "policyDeliveries": ["nonNullPolicy"]},
        {"sourceContextType": "req"}]
    },
    "iframe-override": {
      "description":
        "external iframe's policy should override parent Document's policy",
      "sourceContextList": [
        {"sourceContextType": "top", "policyDeliveries": ["anotherPolicy"]},
        {"sourceContextType": "iframe", "policyDeliveries": ["policy"]},
        {"sourceContextType": "req"}]
    },
    "req-override": {
      "description":
        "Subresource request's policy should override Document's policy",
      "sourceContextList": [
        {"sourceContextType": "top", "policyDeliveries": ["anotherPolicy"]},
        {"sourceContextType": "req", "policyDeliveries": ["nonNullPolicy"]}]
    },
    "classic-worker": {
      "sourceContextList": [
        {"sourceContextType": "top", "policyDeliveries": ["anotherPolicy"]},
        {"sourceContextType": "classic-worker", "policyDeliveries": ["policy"]},
        {"sourceContextType": "req"}]
    },
    "classic-data-worker": {
      "sourceContextList": [
        {"sourceContextType": "top", "policyDeliveries": ["anotherPolicy"]},
        {"sourceContextType": "classic-data-worker", "policyDeliveries": ["policy"]},
        {"sourceContextType": "req"}]
    },
    "module-worker": {
      "sourceContextList": [
        {"sourceContextType": "top", "policyDeliveries": ["anotherPolicy"]},
        {"sourceContextType": "module-worker", "policyDeliveries": ["policy"]},
        {"sourceContextType": "req"}]
    },
    "module-data-worker": {
      "sourceContextList": [
        {"sourceContextType": "top", "policyDeliveries": ["anotherPolicy"]},
        {"sourceContextType": "module-data-worker", "policyDeliveries": ["policy"]},
        {"sourceContextType": "req"}]
    }
  },

  "test_expansion_schema": {
    "expansion": [
      "default",
      "override"
    ],

    "delivery_type": [
      "attr",
      "rel-noref",
      "http-rp",
      "meta"
    ],

    "delivery_value": [
      null,
      "no-referrer",
      "no-referrer-when-downgrade",
      "same-origin",
      "origin",
      "origin-when-cross-origin",
      "strict-origin",
      "strict-origin-when-cross-origin",
      "unsafe-url"
    ],

    "source_context": [
      "top",
      "req",
      "srcdoc-inherit",
      "srcdoc-override",
      "iframe-override",
      "req-override",
      "classic-worker",
      "classic-data-worker",
      "module-worker",
      "module-data-worker"
    ],

    "source_protocol": [
      "http",
      "https"
    ],

    "origin": [
      "same-http",
      "same-https",
      "cross-http",
      "cross-https"
    ],

    "redirection": [
      "no-redirect",
      "keep-origin",
      "swap-origin"
    ],

    "subresource": [
      "iframe-tag",
      "img-tag",
      "script-tag",
      "a-tag",
      "area-tag",
      "xhr-request",
      "worker-request",
      "module-worker",
      "shared-worker",
      "fetch-request"
    ],

    "expected": [
      "omitted",
      "origin",
      "stripped-referrer"
    ]
  }
}
